% Generated by roxygen2 (4.0.2): do not edit by hand
\name{geojson_json}
\alias{as.json}
\alias{as.json.geo_list}
\alias{as.json.geojson}
\alias{geojson_json}
\alias{geojson_json.SpatialPointsDataFrame}
\alias{geojson_json.SpatialPolygons}
\alias{geojson_json.SpatialPolygonsDataFrame}
\alias{geojson_json.data.frame}
\alias{geojson_json.list}
\alias{geojson_json.numeric}
\title{Convert many input types with spatial data to geojson specified as a json string}
\usage{
geojson_json(...)

\method{geojson_json}{SpatialPolygons}(input, ...)

\method{geojson_json}{SpatialPolygonsDataFrame}(input, ...)

\method{geojson_json}{SpatialPointsDataFrame}(input, ...)

\method{geojson_json}{numeric}(input, polygon = NULL, ...)

\method{geojson_json}{data.frame}(input, lat = "latitude",
  lon = "longitude", polygon = NULL, object = "FeatureCollection", ...)

\method{geojson_json}{list}(input, lat = "latitude", lon = "longitude",
  polygon = NULL, ...)

as.json(x, ...)

\method{as.json}{geo_list}(x, ...)

\method{as.json}{geojson}(x, ...)
}
\arguments{
\item{...}{Further args passed on to \code{\link[jsonlite]{toJSON}}}

\item{input}{Input list, data.frame, or spatial class. Inputs can also be dplyr \code{tbl_df}
class since it inherits from \code{data.frame}.}

\item{polygon}{If a polygon is defined in a data.frame, this is the column that defines the
grouping of the polygons in the \code{data.frame}}

\item{lat}{Latitude name. Default: latitude}

\item{lon}{Longitude name. Default: longitude}

\item{x}{Ignored}
}
\description{
Convert many input types with spatial data to geojson specified as a json string
}
\details{
This function creates a geojson structure as a json character string; it does not
write a file using \code{rgdal} - see \code{\link{geojson_write}} for that.
}
\examples{
\dontrun{
# From a numeric vector of length 2
geojson_json(c(32.45,-99.74))

# From a data.frame
library('maps')
data(us.cities)
geojson_json(us.cities[1:2,], lat='lat', lon='long')
geojson_json(us.cities[1:2,], lat='lat', lon='long', pretty=TRUE)
geojson_json(us.cities[1:2,], lat='lat', lon='long',
   object="GeometryCollection", pretty=TRUE)

# From SpatialPolygons class
library('sp')
poly1 <- Polygons(list(Polygon(cbind(c(-100,-90,-85,-100),
   c(40,50,45,40)))), "1")
poly2 <- Polygons(list(Polygon(cbind(c(-90,-80,-75,-90),
   c(30,40,35,30)))), "2")
sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2)
geojson_json(sp_poly)
geojson_json(sp_poly, pretty=TRUE)

# data.frame to SpatialPolygonsDataFrame
library('maps')
data(us.cities)
geojson_write(us.cities[1:2,], lat='lat', lon='long') \%>\% as.SpatialPolygonsDataFrame

# data.frame to json (via SpatialPolygonsDataFrame)
geojson_write(us.cities[1:2,], lat='lat', lon='long') \%>\% as.json
}
}

